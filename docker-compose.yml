version: '3.8'

services:

  metrics_consumer_db:
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_USER: mc
      POSTGRES_PASSWORD: password
      POSTGRES_DB: metrics_consumer_db
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  zookeeper-1:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  zookeeper-2:
    image: wurstmeister/zookeeper
    ports:
      - "3181:2181"

  zookeeper-3:
    image: wurstmeister/zookeeper
    ports:
      - "4181:2181"

  kafka-1:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://Localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-2:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://Localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka-3:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper-1
      - zookeeper-2
      - zookeeper-3
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://Localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181,zookeeper-3:2181

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  metric_consumer:
    container_name: consumer
    restart: always
    build: ./metrics_consumer
    ports:
      - "8080:8080"
    depends_on:
      - metrics_consumer_db
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SPRING_DATASOURCE_URL: 'jdbc:postgresql://metrics_consumer_db:5432/metrics_consumer_db'
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka-1:9092,kafka-2:9093,kafka-3:9094
      JAVA_OPTS: '-Xmx512m'

  metrics_producer:
    container_name: producer
    restart: always
    build: ./metrics_producer
    ports:
      - "8081:8081"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka-1:9092,kafka-2:9093,kafka-3:9094
      JAVA_OPTS: '-Xmx512m'