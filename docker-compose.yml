version: '3.8'

services:

  metrics_consumer_db:
    image: postgres:latest
    restart: on-failure
    environment:
      POSTGRES_USER: mc
      POSTGRES_PASSWORD: password
      POSTGRES_DB: metrics_consumer_db
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2182"

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://Localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#  zookeeper:
#    image: wurstmeister/zookeeper
#    environment:
#     ZOOKEEPER_CLIENT_PORT: 2181
#     ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2182"
#
#  kafka1:
#    image: wurstmeister/kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    hostname: kafka1
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#
#  kafka2:
#    image: wurstmeister/kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9094:9094"
#    hostname: kafka2
#    environment:
#      KAFKA_BROKER_ID: 2
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9094
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

#  kafka3:
#    image: wurstmeister/kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9096:9096"
#    hostname: kafka3
#    environment:
#      KAFKA_BROKER_ID: 3
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9096
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9096
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

#  metric_consumer:
#    container_name: consumer
#    restart: always
#    build: ./metric_consumer
#    ports:
#      - "8080:8080"
#    depends_on:
#      - metrics_consumer_db
#      - kafka
#    environment:
#      SPRING_DATASOURCE_URL: 'jdbc:postgresql://metrics_consumer_db:5432/metrics_consumer_db'
#      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka1:9092,kafka2:9093
#      JAVA_OPTS: '-Xmx512m'

#  metrics_producer:
#    container_name: producer
#    restart: always
#    build: ./metrics_producer
#    ports:
#      - "8081:8081"
#    depends_on:
#      - kafka1
#      - kafka2
#      - kafka3
#    environment:
#      SPRING.KAFKA.BOOTSTRAP-SERVERS: host.docker.internal:29092,host.docker.internal:29093
#      JAVA_OPTS: '-Xmx512m'








#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "127.0.0.1:2181:2181"
#    networks:
#      monitoring_system:
#
#  kafka1:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    ports:
#      - "127.0.0.1:9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
#    volumes:
#      - metrics_kafka:/var/run/kafka1
#    networks:
#      monitoring_system:

#  kafka2:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper
#    ports:
#      - "127.0.0.1:9093:9093"
#    environment:
#      KAFKA_BROKER_ID: 2
#      KAFKA_LISTENERS: PLAINTEXT://localhost:9093
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
#    volumes:
#      - metrics_kafka:/var/run/kafka2
#    networks:
#      monitoring_system:

#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    container_name: kafka-ui
#    ports:
#      - 8090:8082
#    restart: always
#    environment:
#      - KAFKA_CLUSTERS_0_NAME=local
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:9092,kafka2:9093
#      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
#    links:
#      - kafka1
#      - kafka2
#      - zookeeper
